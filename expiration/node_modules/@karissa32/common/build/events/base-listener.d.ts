import { Message, Stan } from "node-nats-streaming";
import { Subjects } from "./subjects";
interface Events {
    subject: Subjects;
    data: any;
}
export declare abstract class Listener<T extends Events> {
    abstract subject: T['subject'];
    abstract queueGroupName: string;
    abstract onMessage(data: T['data'], mgs: Message): void;
    protected client: Stan;
    protected ackWait: number;
    constructor(client: Stan);
    subscriptionOptions: () => import("node-nats-streaming").SubscriptionOptions;
    listen: () => void;
    parseMessage: (msg: Message) => any;
}
export {};
